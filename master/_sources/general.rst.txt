General
=======

Endpoint
--------
Production endpoints:
 - :code:`wss://scribe.ava.me/v1/`


Hello
-----


When opening a websocket, client should send an :code:`hello` message which contains:

- **type** (`string`): :code:`hello`.
- **token** (`string`): valid API token.
- **encoding** (`string`): Encoding of audio data which will be sent. Valid values are :code:`LINAR_16`.
- **sampleRateHertz** (`integer`). Sample rate in Hertz of the audio data which will be sent. Valid values are :code:`8000`.
- **chunkLengthMs** (`integer`). Duration in ms of the chunks of the audio data which will be sent. Valid values are :code:`100`.


Exemple:

.. code-block:: json

    {
	"type": "hello",
        "encoding": "OGG_OPUS",
        "sampleRateHertz": 8000,
        "chunkLengthMs": 100,
        "token": "ibabcae6a44ee3b6618774d422e3b0748049aca3f95143fa9c2760"
    }


Captioner Ready
---------------

When a captioner is ready to handle the conversation, Ava send a :code:`ready` message to the client, which contains:

- **type** (`string`): :code:`ready`.
- **callId** (`string`): Id of the call. May be used to establish a second websocket connection (future) or to restart a connection if the first one is closed unexpectedly (future).

Exemple:

.. code-block:: json

    {
	"type": "ready",
	"callId": "5b49d758ec2040000121aaf5"
    }

At this points, client can start to stream audio (see :doc:`messages`).



Errors
------

For various reasons, we may send :code:`error` messages. Client should expect that the underlying WebSocket connection will be closed by us after sending an error message. Errors message contains:

- **type** (`error`): :code:`error`.
- **code** (`integer`): error code
- **message** (`string`): error message

Exemple:

.. code-block:: json

    {
	"type": "error",
	"code": "403",
	"message": "Invalid API Token"
    }

Here is the list of all the possible errors:

- **Invalid API Token** (`403`): Client is not authorized to connect to the server.


